#pragma once

#define AES_128_BLOCK_BYTES_SIZE 16
#define SUCCESS 1
#define ERROR 0

/* keep secret */
static uint8_t* key = "^Qnk&gUV(NBTkc*=";

/* keep secret */
static uint8_t m[] = {
   0x66, 0x6c, 0x61, 0x67, 0x7b, 0x50, 0x61, 0x64,
   0x64, 0x31, 0x6e, 0x67, 0x5f, 0x6f, 0x72, 0x34,
   0x63, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x34,
   0x63, 0x6b, 0x5f, 0x69, 0x35, 0x5f, 0x33, 0x61,
   0x73, 0x79, 0x7d                                 // msg = 'flag{Padd1ng_or4cle_att4ck_i5_3asy}'
};

/*
 * public
static uint8_t iv[16] = {
       0x46, 0x30, 0x72, 0x50, 0x61, 0x64, 0x64, 0x69,
       0x6e, 0x67, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x33 // iv = 'F0rPaddingOracl3'
};
*/

uint8_t* aes_enc(const uint8_t* input, size_t ilen, size_t* olen, uint8_t* iv, uint8_t vlen);